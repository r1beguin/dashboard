{"version":3,"sources":["features/Weather/Cloud.js","features/Weather/Rain.js","features/Weather/Sun.js","components/Card.js","features/Weather/Weather.js","components/MiniButton.js","features/Stocks/Stocks.js","components/CardConcave.js","features/Calendar/Calendar.js","components/GradientText.js","features/Lastlaunch/LastLaunch.js","features/Dashboard/Dashboard.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["ParralaxBigCloud","styled","Box","props","moveX","ParralaxLittleCloud","Cloud","pos","size","React","useContext","ResponsiveContext","Stack","anchor","style","opacity","background","width","height","round","elevation","parseFloat","match","pad","right","ParralaxDrop","Rain","align","direction","justify","margin","gap","ParralaxRay","Sun","Card","Weather","useState","data","setData","date","setDate","time","setTime","refresh","setRefresh","weather","setWeather","useEffect","fetch","secret","then","response","json","currently","icon","setInterval","d","Date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","j","weekday","h","getHours","m","getMinutes","top","horizontal","bottom","Text","temperature","toString","weight","Stocks","current","setCurrent","situation","arr","chart","result","indicators","quote","close","map","item","i","unix_timestamp","timestamp","formattedTime","toLocaleString","timeZone","push","x","quoteResponse","ask","color","left","dataKey","hide","interval","tick","contentStyle","type","stroke","dot","CardConcave","Calendar","next","setNext","ApiCalendar","sign","listUpcomingEvents","console","log","items","Button","label","onClick","handleAuthClick","start","dateTime","end","overflow","summary","GradientText","LastLaunch","nextLaunches","launches","setLaunches","showInfo","setShowInfo","index","setIndex","res","results","fill","autoHeight","autoHide","autoHeightMax","key","vertical","name","net","Layer","onEsc","onClickOutside","position","modal","Close","infographic","Image","src","fit","Dashboard","theme","global","colors","brand","back","card","accent","ok","font","family","App","setPos","Grommet","full","onMouseMove","e","screenX","path","configureStore","reducer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56572c3c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Box, Stack, ResponsiveContext } from \"grommet\";\nimport styled from \"styled-components\";\n\nconst ParralaxBigCloud = styled(Box)`\n    transform: translateX(${props => props.moveX}) ;  \n`;\nconst ParralaxLittleCloud = styled(Box)`\n    transform: translateX(${props => props.moveX}); \n`;\n\n\n\nconst Cloud = ({pos}) => {\n    const size = React.useContext(ResponsiveContext);\n    return (\n        <Stack anchor=\"bottom\" style={{opacity: 0.5}} >\n\n            <ParralaxBigCloud background=\"#edf4f5\" width={size === \"large\" ? \"160px\" : \"80px\"} height={size===\"large\" ? \"50px\" : \"25px\"} round=\"medium\" elevation=\"small\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.25\n                     return x+\"px\"\n                }} />\n            <Stack anchor=\"right\" >\n                <Box pad={{right: \"10px\"}}>\n                    <ParralaxBigCloud background=\"#daeff2\" width={size === \"large\" ? \"100px\" : \"50px\"} height={size === \"large\" ? \"100px\" : \"50px\"} round=\"full\" moveX={pos}  />\n                </Box>\n                <ParralaxLittleCloud background=\"#a9d1d6\" width={size === \"large\" ? \"70px\" : \"35px\"} height={size === \"large\" ? \"70px\" : \"35px\"} round=\"full\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.5\n                     return x+\"px\"\n                }}/>\n            </Stack>\n            \n        </Stack>\n        \n    )\n}\n\n\nexport default Cloud;","import React from \"react\";\n\nimport { Box, Stack } from \"grommet\";\nimport styled from \"styled-components\";\n\n\nconst ParralaxBigCloud = styled(Box)`\n    transform: translateX(${props => props.moveX}) ;  \n`;\nconst ParralaxLittleCloud = styled(Box)`\n    transform: translateX(${props => props.moveX}); \n`;\nconst ParralaxDrop = styled(Box)`\n    transform: translate(${props => props.moveX}, ${props => props.moveX}); \n    \n`;\n\nconst Rain = ({pos}) => {\n\n    return (\n        <Box align=\"center\">\n        <Stack anchor=\"bottom\" style={{opacity: 0.5}} >\n\n            <ParralaxBigCloud background=\"#edf4f5\" width=\"160px\" height=\"50px\" round=\"medium\" elevation=\"small\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.25\n                     return x+\"px\"\n                }} />\n            <Stack anchor=\"right\" >\n                <Box pad={{right: \"10px\"}}>\n                    <ParralaxBigCloud background=\"#daeff2\" width=\"100px\" height=\"100px\" round=\"full\" moveX={pos}  />\n                </Box>\n                <ParralaxLittleCloud background=\"#a9d1d6\" width=\"70px\" height=\"70px\" round=\"full\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.5\n                     return x+\"px\"\n                }}/>\n            </Stack>\n            \n        </Stack>\n        <Box direction=\"row\" justify='between' margin=\"small\" gap=\"small\"> \n            <ParralaxDrop width=\"10px\" height=\"10px\" round=\"full\" background=\"neutral-3\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.25\n                     return x+\"px\"\n                }}/>\n            <ParralaxDrop width=\"10px\" height=\"10px\" round=\"full\" background=\"neutral-3\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.35\n                     return x+\"px\"\n                }}/>\n            <ParralaxDrop width=\"10px\" height=\"10px\" round=\"full\" background=\"neutral-3\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.25\n                     return x+\"px\"\n                }}/>\n            <ParralaxDrop width=\"10px\" height=\"10px\" round=\"full\" background=\"neutral-3\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.35\n                     return x+\"px\"\n                }}/>\n           \n        </Box>\n    </Box>\n    )\n}\n\n\nexport default Rain;","import React from \"react\";\n\nimport { Box, Stack } from \"grommet\";\nimport styled from \"styled-components\";\n\nconst ParralaxRay = styled(Box)`\n    transform: rotate(${props => props.moveX}) ;  \n`;\n\n\nconst Sun = ({pos}) => {\n\n    return (\n    \n        <Stack anchor=\"center\" style={{opacity: 0.5}} >\n\n            <Box background=\"status-warning\" width=\"xsmall\" height=\"xsmall\" round=\"full\" elevation=\"small\" moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))*0.25\n                     return x+\"px\"\n                }} />\n            <ParralaxRay background=\"status-warning\" width=\"130px\" height=\"10px\" round=\"small\"  moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))\n                     return x+\"deg\"\n                }} />\n            <ParralaxRay background=\"status-warning\" width=\"10px\" height=\"130px\" round=\"small\"  moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))\n                     return x+\"deg\"\n                }} />\n            <ParralaxRay background=\"status-warning\" width=\"10px\" height=\"130px\" round=\"small\"  moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))\n                     return 45+x+\"deg\"\n                }} />\n            <ParralaxRay background=\"status-warning\" width=\"10px\" height=\"130px\" round=\"small\"  moveX={() => {\n                     const x = parseFloat(pos.match(/^\\d*.\\d{2}/g,''))\n                     return x-45+\"deg\"\n                }} />\n            \n        </Stack>\n\n    )\n}\n\n\nexport default Sun;","\nimport {Box} from \"grommet\";\nimport styled from \"styled-components\";\n\n\nconst Card = styled(Box)`\n\nbackground: #292929;\nbox-shadow:  5px 5px 10px #202020, \n             -5px -5px 10px #323232;\n`;\n\nexport default Card;","import React from \"react\";\n\nimport { Box, Text, Stack, ResponsiveContext } from \"grommet\";\n\nimport Cloud from \"./Cloud\";\nimport Rain from \"./Rain\";\nimport Sun from \"./Sun\";\n\nimport secret from \"../../secret.json\";\n\nimport Card from \"../../components/Card\"\n\n\nconst Weather = ({pos}) => {\n\n    const [data, setData] = React.useState();\n    const [date, setDate] = React.useState('');\n    const [time, setTime] = React.useState('');\n    const [refresh, setRefresh] = React.useState(true);\n    const [weather, setWeather] = React.useState(\"sun\");\n\n    React.useEffect(() => {\n      \n        \n        if (refresh) {\n            fetch(\"https://dark-sky.p.rapidapi.com/43.603951,1.444510?lang=en&units=auto\", {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-key\": secret,\n                    \"x-rapidapi-host\": \"dark-sky.p.rapidapi.com\"\n                }\n            })\n                .then(response => response.json())\n                .then(data => {setData(data);setWeather(data.currently.icon)})\n                setRefresh(false)  \n                \n        }\n            setInterval(() => {\n                const d = new Date();\n                const ye = new Intl.DateTimeFormat('fr', { year: 'numeric' }).format(d);\n                const mo = new Intl.DateTimeFormat('fr', { month: 'long' }).format(d);\n                const da = new Intl.DateTimeFormat('fr', { day: 'numeric' }).format(d);\n                const j = new Intl.DateTimeFormat('fr', { weekday: 'long' }).format(d);\n                const h = d.getHours();\n                const m = d.getMinutes();\n                \n                setDate(j+\" \"+da+\" \"+mo+\" \"+ye);\n                setTime(h+\" : \"+m)\n            }, 1000)\n        \n       \n\n    }, [refresh])\n\n    const size = React.useContext(ResponsiveContext);\n\n    return (\n        <Card  round=\"small\" pad=\"small\" width=\"medium\" justify=\"center\" align=\"center\">\n            <Box pad={{top: \"xlarge\", horizontal:\"small\"}} round=\"small\">\n            \n                <Stack anchor=\"center\" margin={{ bottom:\"medium\"}}>\n\n\n                    {data && weather === \"rain\" ? (\n                        <Rain pos={pos} />\n                    ):data && weather === \"cloudy\" || weather=== \"partly-cloudy-day\" ?(\n                        <Cloud pos={pos} />\n                    ) : data && weather === \"clear-day\" ?(\n                        <Sun pos={pos} />\n                    ) :(\n                        <Sun pos={pos}/>\n                    )}\n                    \n                    <Text size={size}>{data && data.currently.temperature.toString().match(/^\\d*/g,'')} C°</Text>\n                </Stack>\n\n             </Box>  \n            \n            <Box pad=\"small\" align=\"center\" margin=\"small\">\n                <Box direction=\"row\" gap=\"small\" margin=\"small\">\n                    <Text weight=\"bold\" size={size}>{date}</Text>\n                    <Text size={size}>{time}</Text>\n                </Box>\n                <Box>\n                    <Text size={size}>{data && data.currently.icon}</Text>\n                </Box>\n                \n            </Box>        \n        </Card>\n    )\n}\n\n\nexport default Weather;","\nimport {Box} from 'grommet';\nimport styled from \"styled-components\";\n\n\nconst MiniButton = styled(Box)`\n    background: rgb(222,105,7);\n    background: linear-gradient(90deg, rgba(222,105,7,1) 0%, rgba(204,0,0,1) 62%);\n    box-shadow:  10px 10px 15px #202020, \n        -10px -10px 15px #323232;\n\n    :active {\n        box-shadow: inset 5px 5px 10px #780000, \n        inset -5px -5px 10px #ff0000;\n    }\n`;\n\nexport default MiniButton;","import React from \"react\";\n\nimport { Box, Text, ResponsiveContext, Button } from \"grommet\";\nimport { Refresh } from \"grommet-icons\"\nimport {LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer} from \"recharts\";\n\nimport secret from \"../../secret.json\";\n\nimport Card from \"../../components/Card\"\nimport MiniButton from \"../../components/MiniButton\"\n\nconst Stocks = () => {\n\n    const [data, setData] = React.useState();\n    const [time, setTime] = React.useState('interval=1d&range=1y');\n    const [current, setCurrent] =React.useState();\n    const [situation, setSituation] = React.useState(7);\n    const [refresh, setRefresh] = React.useState(true);\n\n    const size = React.useContext(ResponsiveContext);\n\n    React.useEffect(() => {\n\n        if (refresh) {\n\n            fetch(`https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-chart?${time}&symbol=TSLA&region=US`, {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-key\": secret,\n                    \"x-rapidapi-host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\"\n                }\n            })\n            .then(response => response.json())\n            .then(data => { \n                const arr = [];\n                data.chart.result[0].indicators.quote[0].close.map((item,i) => {\n                    let unix_timestamp = data.chart.result[0].timestamp[i]\n                    var date = new Date(unix_timestamp * 1000);\n                    var formattedTime = date.toLocaleString('en-GB', { timeZone: 'UTC' });\n                    arr.push({x: formattedTime, close: item})\n\n            })\n                setData(arr)\n            })\n\n            \n            fetch(\"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes?symbols=TSLA&region=US\", {\n                \"method\": \"GET\",\n                \"headers\": {\n                    \"x-rapidapi-key\": \"396c8c801cmsh03d8aa703d5356cp10f6bfjsneeb135511ccb\",\n                    \"x-rapidapi-host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\"\n                }\n            })\n            .then(response => \n                response.json()\n                \n            )\n            .then(data => {setCurrent(data.quoteResponse.result[0].ask)})\n            \n            setRefresh(false);\n        }\n\n    }, [refresh,time])\n\n    return (\n        <Card round=\"small\" height={size === \"large\" ? \"medium\" :\"small\"} round=\"small\" pad=\"small\" justify=\"center\" align=\"center\" >\n                \n                <Card  round=\"small\" align=\"center\" pad=\"medium\">\n                    <Text size=\"small\" color=\"brand\">{current} $</Text>\n                    <Text size=\"small\" color=\"brand\">{(situation*current).toString().match(/^\\d+/g,'')} $</Text>                     \n                </Card> \n\n            <Box width=\"350px\" height=\"60%\">\n                <ResponsiveContainer >\n                    <LineChart data={data}\n                    margin={{top: 5, right: 30, left: 20}}>\n                        <XAxis dataKey=\"x\" hide interval=\"preserveStartEnd\" tick={false} />\n                        <YAxis tick={false} hide />\n                        \n                        <Tooltip contentStyle={{color: \"#994650\"}}/>\n                        \n                        <Line dataKey=\"close\" type=\"monotone\"  stroke=\"#cc0000\" dot={false}/>\n                    </LineChart>\n                </ResponsiveContainer>\n            </Box>\n         \n             \n        </Card>\n    )\n}\n\n\nexport default Stocks;","\nimport {Box} from \"grommet\";\nimport styled from \"styled-components\";\n\n\nconst CardConcave = styled(Box)`\n    background: #292929;\n    box-shadow: inset 5px 5px 10px #1b1b1b, \n            inset -5px -5px 10px #373737;\n    :hover {\n        background: rgb(222,105,7);\n        background: linear-gradient(90deg, rgba(222,105,7,1) 0%, rgba(204,0,0,1) 62%);\n        box-shadow: inset 5px 5px 10px #780000, \n        inset -5px -5px 10px #ff0000;\n    }\n`;\n\nexport default CardConcave;","import React from \"react\";\n\nimport { Box, Text, ResponsiveContext, Button } from \"grommet\";\n\nimport ApiCalendar from 'react-google-calendar-api';\n\nimport Card from \"../../components/Card\"\nimport CardConcave from \"../../components/CardConcave\"\n\nconst Calendar = () => {\n\n    const [next, setNext] = React.useState();\n    const size = React.useContext(ResponsiveContext);\n\n\n    React.useEffect(() => {\n        if (ApiCalendar.sign)\n        ApiCalendar.listUpcomingEvents(3)\n          .then(({result}: any) => {\n            console.log(result.items);\n            setNext(result.items);\n            \n          });\n    }, [ApiCalendar.sign])\n\n    return (\n        <Card round=\"small\" pad=\"small\" justify=\"center\" align=\"center\" width=\"medium\">\n            \n            {!ApiCalendar.sign && (\n                <Box align=\"center\" justify=\"center\" gap=\"small\" margin=\"small\">\n                    <Button label=\"Connexion\" onClick={() => ApiCalendar.handleAuthClick()} color=\"brand\"/>\n                </Box>\n            )}\n            <Box height=\"small\" gap=\"small\">\n\n            {next && \n                next.map(item => {\n                    const start = new Date(item.start.dateTime);\n                    const end = new Date(item.end.dateTime)\n                    return (\n                        <CardConcave gap=\"medium\" pad=\"medium\"round=\"small\" direction=\"row\" align=\"center\" justify=\"center\" elevation=\"xxsmall\">\n                            {start && (\n                                <Box gap=\"medium\" direction=\"row\" align=\"center\">\n                                <Text size=\"xsmall\">{start && start.toLocaleString().match(/^\\d+\\/\\d+\\/\\d+/g,'')}</Text>\n                                <Box>\n                                    <Text size=\"xsmall\">{start && start.toLocaleString().match(/\\d+:\\d+/g,'')}</Text>\n                                    <Text size=\"xsmall\">{end && end.toLocaleString().match(/\\d+:\\d+/g,'')}</Text>\n                                </Box>\n                                </Box>\n\n                            ) }\n                            \n                            \n                            <Box align=\"center\" justify=\"center\" overflow=\"auto\" width=\"xsmall\">\n                                <Text size=\"xsmall\" >{item.summary}</Text>\n                                \n                            </Box>\n                        </CardConcave>\n                    )\n                })\n               \n            }\n            </Box>\n             \n        </Card>\n    )\n}\n\n\nexport default Calendar;","\nimport {Text} from 'grommet';\nimport styled from \"styled-components\";\n\n\nconst GradientText = styled(Text)`\n    background: rgb(222,105,7);\n    background: linear-gradient(90deg, rgba(222,105,7,1) 0%, rgba(204,0,0,1) 62%);\n    -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  \n\n`;\n\nexport default GradientText;","import React from \"react\"\n\n\nimport Card from \"../../components/Card\";\nimport GradientText from \"../../components/GradientText\";\nimport CardConcave from \"../../components/CardConcave\";\n\nimport {Box, Text, Layer, Image, Button, ResponsiveContext, Collapsible} from \"grommet\"\n\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport nextLaunches from \"../../data.json\"\nimport { Close } from \"grommet-icons\";\n\nconst LastLaunch = () => {\n\n    const [launches, setLaunches] = React.useState(nextLaunches);\n    const [showInfo, setShowInfo] = React.useState(false);\n    const [index, setIndex] = React.useState(0);\n\n    React.useEffect(() => {\n        fetch(\"https://ll.thespacedevs.com/2.0.0/launch/upcoming/?rocket__configuration__manufacturer__name__icontains=spacex\")\n        .then(res => res.json())\n        .then(data => {data.results && setLaunches(data);\n        })\n    }, [])\n\n\n    const size = React.useContext(ResponsiveContext);\n\n    return (\n        <>\n        \n\n <Card round=\"small\" pad=\"medium\" gap=\"medium\" height=\"medium\">\n <Box fill=\"horizontal\" justify=\"between\" direction=\"row\">\n <GradientText weight=\"bold\" size=\"medium\">Next launches</GradientText>\n        \n     </Box>\n     \n    \n     \n         <Box fill=\"vertical\">\n         <Scrollbars autoHeight autoHide autoHeightMax=\"100%\">\n             {launches && launches.results.map((item, i) => (\n\n                 <CardConcave key={i} round=\"small\" pad=\"small\" onClick={()=>{setIndex(i); setShowInfo(true)}} margin={{vertical:\"small\"}}>\n                     <Text size=\"small\">{ item.name}</Text>\n                     <Text size=\"small\">{ new Date(item.net).toLocaleString(\"fr-FR\")}</Text>\n\n                 </CardConcave>\n             )\n             )}\n             </Scrollbars>\n         </Box>\n     \n </Card>\n {showInfo && (\n     <Layer\n     \n     onEsc={() => setShowInfo(false)}\n     onClickOutside={() => setShowInfo(false)}\n     position=\"center\"\n     modal={false}>\n         <Card width={size!== \"small\" ? \"large\" : \"medium\"} height={size!== \"small\" ? \"large\" : \"medium\"} pad=\"small\">\n             <Button onClick={()=>setShowInfo(false)} icon={<Close />} />\n             {launches.results[index].infographic ? (\n                 <Image src={launches.results[index].infographic} fit=\"contain\"/>\n             ) : (\n                 <Text>No infographic available</Text>\n             )}\n             \n         </Card>\n     </Layer>\n )}\n\n\n        </>\n    )\n}\n\nexport default LastLaunch;","import React from 'react';\n\nimport {Box, ResponsiveContext} from 'grommet';\n\nimport Weather from \"../Weather/Weather\";\nimport Stocks from \"../Stocks/Stocks\";\nimport Calendar from \"../Calendar/Calendar\";\nimport LastLaunch from \"../Lastlaunch/LastLaunch\";\n\nconst Dashboard = ({pos}) => {\n\n    const size = React.useContext(ResponsiveContext);\n\n\n    return(\n        <Box pad=\"medium\" align=\"center\" fill margin=\"small\">\n            \n            <Box direction={size ===\"large\" ? \"row\" : \"column\"} gap=\"large\" align=\"center\">\n                <Box direction={(size===\"large\" || size===\"medium\") ? \"row\" : \"column\"} gap=\"large\" align=\"center\">\n                    <Box >\n                        <Weather pos={pos}/>\n                    </Box>\n                    <Box >\n                        <Stocks/>\n                    </Box>\n                </Box>    \n                <Box>\n                    <Calendar/>\n                </Box>\n                \n            </Box> \n            <Box margin=\"medium\">\n                <LastLaunch />\n            </Box>  \n        </Box>\n    )\n}\n\nexport default Dashboard;","import React from \"react\";\r\nimport { Grommet, Box, ResponsiveContext  } from \"grommet\";\r\n\r\nimport DashBoard from \"./features/Dashboard/Dashboard\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#cc0000',\r\n      back: \"#292929\",\r\n      card: \"#bfdbf7\",\r\n      accent: \"#994650\",\r\n      ok: '#00C781',\r\n    },\r\n    font: {\r\n      family: \"Roboto\",\r\n      size: \"18px\",\r\n      height: \"20px\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction App() {\r\n  const [pos, setPos] = React.useState(\"0px\");\r\n\r\n  const size = React.useContext(ResponsiveContext);\r\n  return (\r\n    <Grommet theme={theme} full>\r\n      <Box fill={size!==\"small\" ? true : false} align=\"center\" justify=\"center\" background=\"back\" onMouseMove={e => {\r\n            let x = 0;\r\n            \r\n            if (size===\"small\"){\r\n                x = (e.screenX-768/2)/768*25+\"px\";\r\n            }else {\r\n                x = (e.screenX-1536/2)/1536*25+\"px\";\r\n            }\r\n\r\n            setPos(x)\r\n            \r\n            }}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <DashBoard pos={pos}/>\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    \r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}